<<<<<<< HEAD
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("VIM")
knitr::opts_chunk$set(echo = TRUE)
data(eudirectlapse)
## Changement dans les donnees
data <- data.init
# Changement des 0 et 1 de lapse en renouvellement et resignation
data$lapse <- as.factor(data$lapse)
levels(data$lapse) <- c("renouvellement", "resignation")
# Changment des valeurs unknown en NA des variables:
# polholder_diffdriver, vehicl_garage et policy_caruse
data[data$polholder_diffdriver == "unknown", ]$polholder_diffdriver <- NA
data[data$vehicl_garage == "unknown", ]$vehicl_garage <- NA
data[data$policy_caruse == "unknown", ]$policy_caruse <- NA
# Reordonnement de la variable prem_freqperyear en facteur ordonnée (ordinal)
data$prem_freqperyear <- factor(data$prem_freqperyear, order = TRUE, levels = c("1 per year", "2 per year", "4 per year", "12 per year"))
# Creation d un nouvelle variable prem_index=prem_final/prem_last
data$prem_index <- data$prem_final / data$prem_last - 1
# Traitement de la variable vehicl_powerkw: regroupement en 4 groupe
data$vehicl_powerkw_na <- data$vehicl_powerkw
data[data$vehicl_powerkw_na == "125-300 kW", ]$vehicl_powerkw_na <- NA
data[data$vehicl_powerkw %in% c("150 kW","175 kW","200 kW","225 kW","250 kW","275 kW","300 kW"), ]$vehicl_powerkw <- "125-300 kW"
data <- droplevels(data)
data$vehicl_powerkw <- factor(data$vehicl_powerkw, order = TRUE, levels = c("25-50 kW", "75 kW", "100 kW", "125-300 kW"))
table(data$vehicl_powerkw)
data <- data %>% select(-vehicl_powerkw_na)
data.traiter <- data
library(CASdatasets)
library(CASdatasets)
library(tidyverse)
library(tidyverse)
library(mice)
library(mice)
library(xtable)
library(reshape2)
library(VIM)
library(gridExtra)
library(grid)
library(lattice)
library(grid)
library(lattice)
require(FactoMineR)
require(factoextra)
library(grid)
library(lattice)
require(FactoMineR)
require(factoextra)
require(plotly)
library(cluster)
=======
ggplot(data, aes(x = polholder_diffdriver))+
geom_bar(position = "dodge")+
theme_bw()
ggplot(data, aes(x = polholder_gender))+
geom_bar()
ggplot(data, aes(x = polholder_gender))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_gender, fill = lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_diffdriver))+
geom_bar()+
theme_bw()
ggplot(data, aes(x = polholder_gender))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_job))+
geom_bar()
ggplot(data, aes(x = policy_age))+
geom_boxplot()
ggplot(data, aes(x = lapse, y = policy_age))+
geom_boxplot()
ggplot(data, aes(x = policy_age))+
geom_bar()
ggplot(data, aes(x = policy_caruse))+
geom_bar()
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
ACP <- PCA(Data_num, scale = FALSE, ncp = 6)
ggplot(contrib.long, aes(x=carac, fill=variable, y=value))+
geom_bar(stat="identity",position=PositionDodge)+
facet_grid(~variable)+
theme(legend.position="top",axis.text.x = element_text(angle = 90))+
coord_flip()
ggplot(contrib.long, aes(x=carac, fill=variable, y=value))+
geom_bar(stat="identity",position=PositionDodge)+
facet_grid(~variable)+
theme(legend.position="top",axis.text.x = element_text(angle = 90))+
coord_flip()
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
g_prixMarque <- ggplot(data = voitures,
aes(x=Marque, y=PrixConcession)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90))
g_prixMarque
voitures <- cbind(voitures, acp$ind$coord)
voitures
g_ind <- ggplot(data = data,
aes(x= Dim.5, y=Dim.6, col = policy_age,  shape = lapse, labels = vehicl_agepurchase,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
g_ind <- ggplot(data = data,
aes(x= Dim.5, y=Dim.6, col = prem_pure,  shape = lapse, labels = vehicl_agepurchase,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = prem_pure,  shape = lapse, labels = vehicl_agepurchase,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = vehicl_agepurchase,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.3, col = policy_age,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 3
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = vehicl_agepurchase,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
ggplot(contrib.long, aes(x=carac, fill=variable, y=value))+
geom_bar(stat="identity",position=PositionDodge)+
facet_grid(~variable)+
theme(legend.position="top",axis.text.x = element_text(angle = 90))+
coord_flip()
ggplot(contrib.long, aes(x=carac, fill=variable, y=value))+
geom_bar(stat="identity",position=PositionDodge)+
facet_grid(~variable)+
theme(legend.position="top",axis.text.x = element_text(angle = 90))+
coord_flip()
ACP <- PCA(Data_num, scale = TRUE, ncp = 6)  #scale=TRUE permet de normaliser les données. Pourtant les variables n'ont pas a voir des échelles converti ? je crois.
knitr::opts_chunk$set(echo = TRUE, fig.with=3, fig.height=3, fig.align="center")
ggplot(data, aes(x = polholder_age, fill - lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, col = lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse, text=lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse, text=lapse))+
geom_text() +
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse, labels=lapse))+
geom_text() +
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse, label=lapse))+
geom_text() +
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse, labels=lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = lapse, labels=lapse))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, col = polholder_gender))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = polholder_gender))+
geom_bar(position ="dodge") +
theme_bw()
ggplot(data, aes(x = polholder_age, fill = polholder_gender))+
geom_bar() +
theme_bw()
ggplot(data, aes(x = policy_nbcontract))+
geom_bar()
stats_final <- c(summary(data$prem_final)[c(1, 3, 4, 6)], sd(data$prem_final))
stats_last <- c(summary(data$prem_last)[c(1, 3, 4, 6)], sd(data$prem_last))
stats_market <- c(summary(data$prem_market)[c(1, 3, 4, 6)], sd(data$prem_market))
stats_pure <- c(summary(data$prem_pure)[c(1, 3, 4, 6)], sd(data$prem_pure))
tableau_stats <- rbind(stats_final, stats_last, stats_market, stats_pure)
dat_frame_tab <- as.data.frame(tableau_stats)
colnames(dat_frame_tab) <- c("Minimum", "Médiane", "Moyenne", "Maximum", "Écart-type")
print.tables(dat_frame_tab)
library(CASdatasets)
library(tidyverse)
library(mice)
library(BaylorEdPsych)
install.packages("VIM")
print.tables <- function(dat, caption="", label="", align=rep("c", ncol(dat)+1), ...){
print(xtable(pourcentage_manquant, digits = 3,
caption=caption,
label=label,
align=align, ...),
include.rownames = FALSE, sanitize.text.function=function(x){x},
caption.placement = "top", comment=FALSE)
}
stats_final <- c(summary(data$prem_final)[c(1, 3, 4, 6)], sd(data$prem_final))
stats_last <- c(summary(data$prem_last)[c(1, 3, 4, 6)], sd(data$prem_last))
stats_market <- c(summary(data$prem_market)[c(1, 3, 4, 6)], sd(data$prem_market))
stats_pure <- c(summary(data$prem_pure)[c(1, 3, 4, 6)], sd(data$prem_pure))
tableau_stats <- rbind(stats_final, stats_last, stats_market, stats_pure)
dat_frame_tab <- as.data.frame(tableau_stats)
colnames(dat_frame_tab) <- c("Minimum", "Médiane", "Moyenne", "Maximum", "Écart-type")
print.tables(dat_frame_tab)
library(xtable)
print.tables <- function(dat, caption="", label="", align=rep("c", ncol(dat)+1), ...){
print(xtable(pourcentage_manquant, digits = 3,
caption=caption,
label=label,
align=align, ...),
include.rownames = FALSE, sanitize.text.function=function(x){x},
caption.placement = "top", comment=FALSE)
}
stats_final <- c(summary(data$prem_final)[c(1, 3, 4, 6)], sd(data$prem_final))
stats_last <- c(summary(data$prem_last)[c(1, 3, 4, 6)], sd(data$prem_last))
stats_market <- c(summary(data$prem_market)[c(1, 3, 4, 6)], sd(data$prem_market))
stats_pure <- c(summary(data$prem_pure)[c(1, 3, 4, 6)], sd(data$prem_pure))
tableau_stats <- rbind(stats_final, stats_last, stats_market, stats_pure)
dat_frame_tab <- as.data.frame(tableau_stats)
colnames(dat_frame_tab) <- c("Minimum", "Médiane", "Moyenne", "Maximum", "Écart-type")
print.tables(dat_frame_tab)
print.tables <- function(dat, caption="", label="", align=rep("c", ncol(dat)+1), ...){
print(xtable(dat, digits = 3,
caption=caption,
label=label,
align=align, ...),
include.rownames = FALSE, sanitize.text.function=function(x){x},
caption.placement = "top", comment=FALSE)
}
stats_final <- c(summary(data$prem_final)[c(1, 3, 4, 6)], sd(data$prem_final))
stats_last <- c(summary(data$prem_last)[c(1, 3, 4, 6)], sd(data$prem_last))
stats_market <- c(summary(data$prem_market)[c(1, 3, 4, 6)], sd(data$prem_market))
stats_pure <- c(summary(data$prem_pure)[c(1, 3, 4, 6)], sd(data$prem_pure))
tableau_stats <- rbind(stats_final, stats_last, stats_market, stats_pure)
dat_frame_tab <- as.data.frame(tableau_stats)
colnames(dat_frame_tab) <- c("Minimum", "Médiane", "Moyenne", "Maximum", "Écart-type")
print.tables(dat_frame_tab)
stats_final <- c(summary(data$prem_final)[c(1, 3, 4, 6)], sd(data$prem_final))
stats_last <- c(summary(data$prem_last)[c(1, 3, 4, 6)], sd(data$prem_last))
stats_market <- c(summary(data$prem_market)[c(1, 3, 4, 6)], sd(data$prem_market))
stats_pure <- c(summary(data$prem_pure)[c(1, 3, 4, 6)], sd(data$prem_pure))
tableau_stats <- rbind(stats_final, stats_last, stats_market, stats_pure)
dat_frame_tab <- as.data.frame(tableau_stats)
colnames(dat_frame_tab) <- c("Minimum", "Médiane", "Moyenne", "Maximum", "Écart-type")
print.tables(dat_frame_tab)
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 20))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 30))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 45))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 10))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 60))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 15))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 75))
ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme(axis.text.x = element_text(angle = 90))
>>>>>>> merge
data(eudirectlapse)
data.init <- eudirectlapse
## Changement dans les donnees
data <- data.init
# Changement des 0 et 1 de lapse en renouvellement et resignation
data$lapse <- as.factor(data$lapse)
levels(data$lapse) <- c("renouvellement", "resignation")
# Changment des valeurs unknown en NA des variables:
# polholder_diffdriver, vehicl_garage et policy_caruse
data[data$polholder_diffdriver == "unknown", ]$polholder_diffdriver <- NA
data[data$vehicl_garage == "unknown", ]$vehicl_garage <- NA
data[data$policy_caruse == "unknown", ]$policy_caruse <- NA
# Reordonnement de la variable prem_freqperyear en facteur ordonnée (ordinal)
data$prem_freqperyear <- factor(data$prem_freqperyear, order = TRUE, levels = c("1 per year", "2 per year", "4 per year", "12 per year"))
<<<<<<< HEAD
# Creation d un nouvelle variable prem_index=prem_final/prem_last
data$prem_index <- data$prem_final / data$prem_last - 1
=======
>>>>>>> merge
# Traitement de la variable vehicl_powerkw: regroupement en 4 groupe
data$vehicl_powerkw_na <- data$vehicl_powerkw
data[data$vehicl_powerkw_na == "125-300 kW", ]$vehicl_powerkw_na <- NA
data[data$vehicl_powerkw %in% c("150 kW","175 kW","200 kW","225 kW","250 kW","275 kW","300 kW"), ]$vehicl_powerkw <- "125-300 kW"
data <- droplevels(data)
data$vehicl_powerkw <- factor(data$vehicl_powerkw, order = TRUE, levels = c("25-50 kW", "75 kW", "100 kW", "125-300 kW"))
table(data$vehicl_powerkw)
data <- data %>% select(-vehicl_powerkw_na)
data.traiter <- data
<<<<<<< HEAD
data <- data %>% select(-vehicl_powerkw_na)
data %>% select(-vehicl_powerkw_na)
data.traiter <- data
data <- data %>% select(-vehicl_powerkw_na)
data.traiter <- data
data <- data %>% select(-vehicl_powerkw_na)
data.traiter <- data
data <- data %>% select(-vehicl_powerkw_na)
data <- data %>% select(-vehicl_powerkw_na)
print.tables <- function(dat, caption="", label="", align=rep("c", ncol(dat)+1), digits=3, ...){
print(xtable(dat, digits = digits,
caption=caption,
label=label,
align=align),
include.rownames = FALSE, sanitize.text.function=function(x){x},
caption.placement = "top", comment=FALSE, ...)
}
print.tables <- function(dat, caption="", label="", align=rep("c", ncol(dat)+1), digits=3, ...){
print(xtable(dat, digits = digits,
caption=caption,
label=label,
align=align),
include.rownames = FALSE, sanitize.text.function=function(x){x},
caption.placement = "top", comment=FALSE, ...)
}
levels(data$lapse)
nrow(data[data$lapse == "renouvellement",])
round(nrow(data[data$lapse == "renouvellement",])/nrow(data)*100, 2)
nrow(data[data$lapse == "renouvellement",])
nrow(data)
nrow(data[data$lapse == "renouvellement",])/nrow(data)*100
nrow(data[data$lapse == "renouvellement",])/nrow(data)
summary(data$polholder_diffdriver)
sum(summary(data$polholder_diffdriver))
data[data$polholder_diffdriver == "commercial"]
data[data$polholder_diffdriver == "commercial",]
data[data$polholder_diffdriver == "commercial" & data$polholder_diffdriver != NA,]
data[data$polholder_diffdriver == "commercial",]
summary(data$polholder_diffdriver)
summary(data$policy_caruse)
data[data$polholder_diffdriver == "commercial" && !is.na(data$polholder_diffdriver),]
data[data$polholder_diffdriver == "commercial" & !is.na(data$polholder_diffdriver),]
rep("c",5)
data[data$polholder_diffdriver == "all drivers > 24" & !is.na(data$polholder_diffdriver),]
summary(data$polholder_diffdriver)[1]
summary(data$polholder_diffdriver)[c("all drivers > 24")]
summary(data$polholder_diffdriver)
summary(data$polholder_diffdriver)[c("NA")
o
summary(data$polholder_diffdriver)[c("NA")]
summary(data$polholder_diffdriver)[c("NA's")]
data[data$polholder_diffdriver == ";earner 17" & !is.na(data$polholder_diffdriver),]
data[data$polholder_diffdriver == "learner 17" & !is.na(data$polholder_diffdriver),]
summary(data$polholder_gender)
summary(data$polholder_gender)c("Male")
summary(data$polholder_gender)[c("Male")]
knitr::opts_chunk$set(echo = TRUE)
=======
summary(data$polholder_diffdriver)
load("dataCompletTraiter.Rda")
data(data.compl$polholder_diffdriver)
summary(data.compl$polholder_diffdriver)
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
data <- cbind(Donnees_tempo, ACP$ind$coord)
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = vehicl_agepurchase,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.3, col = policy_age,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 3
K <- 3
kmoyennes <- kmeans(Data_num, K, nstart=5)
kmoyennes <- kmeans(Data_num, K, nstart=5)
Donnees_acp <- PCA(Data_num, scale = FALSE, ncp = 2, graph = FALSE)
composante1 <- Donnees_acp$ind$coord[,1]
composante2 <- Donnees_acp$ind$coord[,2]
composante2 <- Donnees_acp$ind$coord[,2]
groupe <- as.factor(kmoyennes$cluster)
ggplot() + geom_point(aes(composante1, composante2, color = groupe)) + theme_minimal()
K <- 5
kmoyennes <- kmeans(Data_num, K, nstart=5)
kmoyennes <- kmeans(Data_num, K, nstart=5)
Donnees_acp <- PCA(Data_num, scale = FALSE, ncp = 2, graph = FALSE)
composante1 <- Donnees_acp$ind$coord[,1]
composante1 <- Donnees_acp$ind$coord[,1]
composante2 <- Donnees_acp$ind$coord[,2]
groupe <- as.factor(kmoyennes$cluster)
ggplot() + geom_point(aes(composante1, composante2, color = groupe)) + theme_minimal()
K <- 5
kmoyennes <- kmeans(Data_num, K, nstart=5)
kmoyennes <- kmeans(Data_num, K, nstart=5)
Donnees_acp <- PCA(Data_num, scale = FALSE, ncp = 6, graph = FALSE)
Donnees_acp <- PCA(Data_num, scale = FALSE, ncp = 6, graph = FALSE)
composante1 <- Donnees_acp$ind$coord[,1]
composante2 <- Donnees_acp$ind$coord[,2]
composante2 <- Donnees_acp$ind$coord[,2]
groupe <- as.factor(kmoyennes$cluster)
groupe <- as.factor(kmoyennes$cluster)
ggplot() + geom_point(aes(composante1, composante2, color = groupe)) + theme_minimal()
kmoyennes$cluster
table(groupe, data$lapse)
ggplot() + geom_point(aes(composante1, composante2, color = groupe)) + theme_minimal()
ggplot() + geom_point(aes(composante2, composante3, color = groupe)) + theme_minimal()
Donnees_acp
Donnees_acp <- PCA(Data_num, scale = FALSE, ncp = 6, graph = FALSE)
kmoyennes <- kmeans(Donnees_acp$var$coord, K, nstart=5)
kmoyennes
ggplot(kmoyennes) + geom_point(aes(Dim.1, Dim.2, color = groupe)) + theme_minimal()
ggplot(as.data.frame(kmoyennes)) + geom_point(aes(Dim.1, Dim.2, color = groupe)) + theme_minimal()
ACP$eig
ACP$var$contrib
knitr::opts_chunk$set(echo = TRUE)
data <- cbind(Donnees_tempo, ACP$ind$coord)
data <- cbind(Donnees_tempo, ACP$ind$coord)
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = vehicl_agepurchase,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
>>>>>>> merge
library(CASdatasets)
library(tidyverse)
library(mice)
library(xtable)
library(reshape2)
library(VIM)
library(gridExtra)
library(grid)
library(lattice)
require(FactoMineR)
require(factoextra)
require(plotly)
library(cluster)
data(eudirectlapse)
data.init <- eudirectlapse
## Changement dans les donnees
data <- data.init
# Changement des 0 et 1 de lapse en renouvellement et resignation
data$lapse <- as.factor(data$lapse)
levels(data$lapse) <- c("renouvellement", "resignation")
# Changment des valeurs unknown en NA des variables:
# polholder_diffdriver, vehicl_garage et policy_caruse
data[data$polholder_diffdriver == "unknown", ]$polholder_diffdriver <- NA
data[data$vehicl_garage == "unknown", ]$vehicl_garage <- NA
data[data$policy_caruse == "unknown", ]$policy_caruse <- NA
# Reordonnement de la variable prem_freqperyear en facteur ordonnée (ordinal)
data$prem_freqperyear <- factor(data$prem_freqperyear, order = TRUE, levels = c("1 per year", "2 per year", "4 per year", "12 per year"))
# Creation d un nouvelle variable prem_index=prem_final/prem_last
data$prem_index <- data$prem_final / data$prem_last - 1
# Traitement de la variable vehicl_powerkw: regroupement en 4 groupe
data$vehicl_powerkw_na <- data$vehicl_powerkw
data[data$vehicl_powerkw_na == "125-300 kW", ]$vehicl_powerkw_na <- NA
data[data$vehicl_powerkw %in% c("150 kW","175 kW","200 kW","225 kW","250 kW","275 kW","300 kW"), ]$vehicl_powerkw <- "125-300 kW"
data <- droplevels(data)
data$vehicl_powerkw <- factor(data$vehicl_powerkw, order = TRUE, levels = c("25-50 kW", "75 kW", "100 kW", "125-300 kW"))
table(data$vehicl_powerkw)
data <- data %>% select(-vehicl_powerkw_na)
data.traiter <- data
print.tables <- function(dat, caption="", label="", align=rep("c", ncol(dat)+1), digits=3, ...){
print(xtable(dat, digits = digits,
caption=caption,
label=label,
align=align),
include.rownames = FALSE, sanitize.text.function=function(x){x},
caption.placement = "top", comment=FALSE, ...)
}
<<<<<<< HEAD
l1 <- c(round(summary(data$polholder_gender)[c("Male")]/nrow(data)*100, 2))
l2 <- c(round(summary(data$polholder_gender)[c("Female")]/nrow(data)*100, 2))
l1
l2
ligne_name <- c("Homme", "Femme")
tableau_sexe <- cbind(ligne_name ,rbind(l1 , l2))
tableau_sexe
dat_frame_tab <- as.data.frame(tableau_sexe)
colnames(dat_frame_tab) <- c("Sexe", "%")
print.tables(dat_frame_tab, hline.after=c(-1,0,2), digits=2, align = c("l", "l", "c"))
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
l1 <- c(summary(data$polholder_diffdriver)[c("all drivers > 24")])
l2 <- c(summary(data$polholder_diffdriver)[c("commercial")])
l3 <- c(summary(data$polholder_diffdriver)[c("learner 17")])
l4 <- c(summary(data$polholder_diffdriver)[c("only partner")])
l5 <- c(summary(data$polholder_diffdriver)[c("same")])
l6 <- c(summary(data$polholder_diffdriver)[c("young drivers")])
l7 <- c(summary(data$polholder_diffdriver)[c("NA's")])
ligne_name <- c("Conducteurs agée de 24+","Commerciale","Conducteur apprenti de 17 ans","Partenaire de couple", "Utilisateur seul", "Jeunes utilisateurs", "Données manquantes")
tableau_statut <- cbind(ligne_name ,rbind(l1 , l2, l3, l4, l5, l6, l7))
dat_frame_tab <- as.data.frame(tableau_statut)
colnames(dat_frame_tab) <- c("Statut", "Nombre d'observation")
dat_frame_tab
l1 <- c(round(summary(data$polholder_gender)[c("Male")]/nrow(data)*100, 2))
l2 <- c(round(summary(data$polholder_gender)[c("Female")]/nrow(data)*100, 2))
ligne_name <- c("Homme", "Femme")
tableau_sexe <- cbind(ligne_name ,rbind(l1 , l2))
dat_frame_tab <- as.data.frame(tableau_sexe)
colnames(dat_frame_tab) <- c("Sexe", "%")
dat_frame_tab
l1 <- c(summary(data$polholder_diffdriver)[c("all drivers > 24")])
l2 <- c(summary(data$polholder_diffdriver)[c("commercial")])
l3 <- c(summary(data$polholder_diffdriver)[c("learner 17")])
l4 <- c(summary(data$polholder_diffdriver)[c("only partner")])
l5 <- c(summary(data$polholder_diffdriver)[c("same")])
l6 <- c(summary(data$polholder_diffdriver)[c("young drivers")])
l7 <- c(summary(data$polholder_diffdriver)[c("NA's")])
ligne_name <- c("Conducteurs agée de 24+","Commerciale","Conducteur apprenti de 17 ans","Partenaire de couple", "Utilisateur seul", "Jeunes utilisateurs", "Données manquantes")
tableau_statut <- cbind(ligne_name ,rbind(l1 , l2, l3, l4, l5, l6, l7))
dat_frame_tab <- as.data.frame(tableau_statut)
colnames(dat_frame_tab) <- c("Statut", "Nombre d'observation")
print.tables(dat_frame_tab, hline.after=c(-1,0,7), digits=2, align = c("l", "l", "c"))
l1 <- c(round(summary(data$polholder_gender)[c("Male")]/nrow(data)*100, 2))
l2 <- c(round(summary(data$polholder_gender)[c("Female")]/nrow(data)*100, 2))
ligne_name <- c("Homme", "Femme")
tableau_sexe <- cbind(ligne_name ,rbind(l1 , l2))
dat_frame_tab <- as.data.frame(tableau_sexe)
colnames(dat_frame_tab) <- c("Sexe", "%")
print.tables(dat_frame_tab, hline.after=c(-1,0,2), digits=2, align = c("l", "l", "c"))
c(round(summary(data$polholder_gender)[c("Male")]/nrow(data)*100, 2))
l1 <- c(summary(data$polholder_diffdriver)[c("all drivers > 24")])
l2 <- c(summary(data$polholder_diffdriver)[c("commercial")])
l3 <- c(summary(data$polholder_diffdriver)[c("learner 17")])
l4 <- c(summary(data$polholder_diffdriver)[c("only partner")])
l5 <- c(summary(data$polholder_diffdriver)[c("same")])
l6 <- c(summary(data$polholder_diffdriver)[c("young drivers")])
l7 <- c(summary(data$polholder_diffdriver)[c("NA's")])
ligne_name <- c("Conducteurs agée de 24+","Commerciale","Conducteur apprenti de 17 ans","Partenaire de couple", "Utilisateur seul", "Jeunes utilisateurs", "Données manquantes")
tableau_statut <- cbind(ligne_name ,rbind(l1 , l2, l3, l4, l5, l6, l7))
dat_frame_tab <- as.data.frame(tableau_statut)
colnames(dat_frame_tab) <- c("Statut", "Nombre d'observation")
print.tables(dat_frame_tab, hline.after=c(-1,0,7), digits=2, align = c("l", "l", "c"))
p1 <- c(round(summary(data$polholder_gender)[c("Male")]/nrow(data)*100, 2))
p+2 <- c(round(summary(data$polholder_gender)[c("Female")]/nrow(data)*100, 2))
p2 <- c(round(summary(data$polholder_gender)[c("Female")]/nrow(data)*100, 2))
ligne_name <- c("Homme", "Femme")
tableau_sexe <- cbind(ligne_name ,rbind(l1 , l2))
dat_frame_tab2 <- as.data.frame(tableau_sexe)
colnames(dat_frame_tab2) <- c("Sexe", "%")
print.tables(dat_frame_tab2, hline.after=c(-1,0,2), digits=2)
dat_frame_tab
dat_frame_tab2
p1 <- c(round(summary(data$polholder_gender)[c("Male")]/nrow(data)*100, 2))
p2 <- c(round(summary(data$polholder_gender)[c("Female")]/nrow(data)*100, 2))
ligne_name <- c("Homme", "Femme")
tableau_sexe <- cbind(ligne_name ,rbind(p1 , p2))
dat_frame_tab2 <- as.data.frame(tableau_sexe)
colnames(dat_frame_tab2) <- c("Sexe", "%")
print.tables(dat_frame_tab2, hline.after=c(-1,0,2), digits=2)
tinytex::reinstall_tinytex()
=======
knitr::opts_chunk$set(echo = TRUE)
ggplot.premfreqperyear <- ggplot(data, aes(x = prem_freqperyear))+
geom_bar() + theme_bw() + ggtitle("(1)") + theme(axis.text.x = element_text(angle = 90))
ggplot.vehicl_garage <- ggplot(data, aes(x = vehicl_garage))+
geom_bar() + theme_bw() + ggtitle("(2)") + theme(axis.text.x = element_text(angle = 90))
grid.arrange(ggplot.premfreqperyear, ggplot.vehicl_garage,  ncol=2)
ggplot(data, aes(x = polholder_age))+
geom_bar() +
labs(x = "Âge du détenteur de police", y = "Fréquence") +
theme_bw()
ggplot(data, aes(x = policy_age))+
geom_bar() +
labs(x = "Âge de la police", y = "Fréquence") +
theme_bw()
ggplot(data, aes(x = policy_nbcontract))+
geom_bar() +
labs(x = "Nombre de contrat par police", y = "Fréquence") +
theme_bw()
stats_final <- c(summary(data$prem_final)[c(1, 3, 4, 6)], sd(data$prem_final))
stats_last <- c(summary(data$prem_last)[c(1, 3, 4, 6)], sd(data$prem_last))
stats_market <- c(summary(data$prem_market)[c(1, 3, 4, 6)], sd(data$prem_market))
stats_pure <- c(summary(data$prem_pure)[c(1, 3, 4, 6)], sd(data$prem_pure))
stats_index <- c(summary(data$prem_index)[c(1, 3, 4, 6)], sd(data$prem_index))
prime_type <- c("Final","Last","Market","Pure", "Index (\\%)")
tableau_stats <- cbind(prime_type ,rbind(round(stats_final, 2), round(stats_last, 2), round(stats_market, 2), round(stats_pure, 2), round(stats_index, 2)))
dat_frame_tab <- as.data.frame(tableau_stats)
colnames(dat_frame_tab) <- c("Prime (\\$)", "Minimum", "Médiane", "Moyenne", "Maximum", "Écart-type")
print.tables(dat_frame_tab, hline.after=c(-1,0,4,5), digits=2, align = c("l", "l", rep("c",5)))
agepurchase_vehicule <- ggplot(data, aes(x = vehicl_agepurchase))+
geom_bar() + theme_bw() + ggtitle("(1)")
age_vehicule <- ggplot(data, aes(x = vehicl_age))+
geom_bar()+ theme_bw() + ggtitle("(2)")
grid.arrange(agepurchase_vehicule, age_vehicule,  ncol=2)
nb_manquant <- round(apply(data, 2, FUN = function(x) sum(is.na(x)))/nrow(data) * 100,2)
#pattern.matrix <- md.pattern(data, rotate.names = TRUE)
missing.pathern <- aggr(data, combined = TRUE, ylabs="",labels=c("","","","diffdriver","","","","caruse","","","","","","","","","garage","",""), sortVars=TRUE)
load("dataCompletTraiter.Rda")
Donnees_tempo <- na.omit(data)
Data_num <- Donnees_tempo[, c("polholder_age", "policy_age", "policy_nbcontract", "prem_final", "prem_last", "prem_market",
"prem_pure", "vehicl_age", "vehicl_agepurchase")]
ACP <- PCA(Data_num, scale = TRUE, ncp = 6)  #scale=TRUE permet de normaliser les données. Pourtant les variables n'ont pas a voir des échelles converti ? je crois.
#si on fait scale=FALSE le graphique est laid. Vous en pensez quoi
fviz_screeplot(ACP)
ACP$eig
ACP$var$contrib
contrib <- data.frame(ACP$var$coord[,1:6])
contrib$carac <- rownames(contrib)
contrib.long <- reshape2::melt(contrib)
ggplot(contrib.long, aes(x=carac, fill=variable, y=value))+
geom_bar(stat="identity",position=PositionDodge)+
facet_grid(~variable)+
theme(legend.position="top",axis.text.x = element_text(angle = 90))+
coord_flip()
data <- cbind(Donnees_tempo, ACP$ind$coord)
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = vehicl_agepurchase,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.3, col = policy_age,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 3
##À VÉRIFIER S'IL NE FAUT PAS INCLURE LES VARIABLES CATEGORIELLE ORDINALE TRANSFORMÉES EN VARIABLE NUMÉRQUES
g_ind <- ggplot(data = data,
aes(x= Dim.2, y=Dim.3, col = policy_age,  shape = lapse, labels = polholder_age,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 2") +
ylab("Dimension 3") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 2 et 3
g_ind <- ggplot(data = data,
aes(x= Dim.1, y=Dim.2, col = vehicl_agepurchase,  shape = lapse, labels = prem_pure,
alpha = 0.2)) +
geom_point() +
xlab("Dimension 1") +
ylab("Dimension 2") +
theme_bw()
ggplotly(g_ind) #Pour comparer les dimensions 1 et 2
>>>>>>> merge
